name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Login and get token.'
      description: ''
      authenticated: false
      custom: []
    headers:
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The e-mail.'
        required: true
        example: gerente2@example.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      password:
        name: password
        description: 'The password.'
        required: true
        example: drugovich123@
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      email: gerente2@example.com
      password: drugovich123@
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/groups
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Displays a list of all groups.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '[{"id":1,"name":"Inactive","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:12:01.000000Z"},{"id":2,"name":"Revenda","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":3,"name":"Cliente Final","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":4,"name":"Seguradora","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":6,"name":"Taxi","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":7,"name":"Locadora","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":8,"name":"Autoescola","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":9,"name":"Colecionador","created_at":"2024-04-17T07:09:26.000000Z","updated_at":"2024-04-17T07:09:26.000000Z"},{"id":10,"name":"VIP","created_at":"2024-04-17T07:10:07.000000Z","updated_at":"2024-04-17T07:10:07.000000Z"}]'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          x-ratelimit-limit: '60'
          x-ratelimit-remaining: '59'
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k61d4vg35PEcZ6ahbDefV8a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/groups/{group}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8Pd5aE46fcb1hak6DVeg3Zv'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/groups/{group}/customers'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the customers in a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fVZEaD5hva46ceb8Pk13d6g'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/groups/{group}/customers/{customer}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a customer to a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
      customer: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v3aP1ehg6D4Ea56bfVZckd8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/groups/{group}/customers/{customer}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a customer from a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
      customer:
        name: customer
        description: 'The ID of the customer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
      customer: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P6gcf8abehE3dk5V4vZ61Da'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/groups
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Created a new group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the new group.'
        required: true
        example: VIP
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: VIP
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPdkav31e46V65Dhb8cZgEf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/groups/{group}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
      Content-Type: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The name of the new group.'
        required: true
        example: Inactive
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanBodyParameters:
      name: Inactive
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bkV4Pcdf8e1hD6aa536gEvZ'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/groups/{group}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a specific group.'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {TOKEN}'
      Accept: application/json
    urlParameters:
      group:
        name: group
        description: 'The ID of the group.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanUrlParameters:
      group: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer av135VeZac8fdgk6E64bDhP'
    controller: null
    method: null
    route: null
    custom: []
